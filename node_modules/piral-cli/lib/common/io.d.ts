/// <reference types="node" />
export declare enum ForceOverwrite {
    no = 0,
    prompt = 1,
    yes = 2
}
export declare function removeDirectory(targetDir: string): Promise<void>;
export declare function createDirectory(targetDir: string): Promise<boolean>;
export declare function checkExists(target: string): Promise<boolean>;
export declare function checkExistingDirectory(target: string): Promise<boolean>;
export declare function checkIsDirectory(target: string): Promise<boolean>;
export declare function getFileWithExtension(fileName: string): string;
export declare function findFile(topDir: string, fileName: string): Promise<string>;
export declare function matchFiles(baseDir: string, pattern: string): Promise<string[]>;
export declare function createFileIfNotExists(targetDir: string, fileName: string, content: string, forceOverwrite?: ForceOverwrite): Promise<void>;
export declare function updateExistingFile(targetDir: string, fileName: string, content: string): Promise<void>;
export declare function getHash(targetFile: string): Promise<string>;
export declare function mergeWithJson<T>(targetDir: string, fileName: string, newContent: T): Promise<any>;
export declare function readJson<T = any>(targetDir: string, fileName: string): Promise<T>;
export declare function writeJson<T = any>(targetDir: string, fileName: string, data: T): Promise<void>;
export declare function readBinary(targetDir: string, fileName: string): Promise<Buffer>;
export declare function writeText(targetDir: string, fileName: string, data: string): Promise<void>;
export declare function readText(targetDir: string, fileName: string): Promise<string>;
export declare function updateExistingJson<T>(targetDir: string, fileName: string, newContent: T): Promise<void>;
export declare function copy(source: string, target: string, forceOverwrite?: ForceOverwrite): Promise<void>;
export declare function remove(target: string): Promise<unknown>;
export declare function move(source: string, target: string, forceOverwrite?: ForceOverwrite): Promise<string>;
export declare function getSourceFiles(entry: string): Promise<{
    path: string;
    directory: string;
    name: string;
    read(): Promise<string>;
}[]>;
